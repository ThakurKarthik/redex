(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{54:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return s}));t(0);var a=t(64);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i={id:"proguard",title:"Using ProGuard Rules with Redex"},l=[{value:"The Need To Control Shrinking",id:"the-need-to-control-shrinking",children:[]},{value:"Example",id:"example",children:[]},{value:"Limitations",id:"limitations",children:[]},{value:"Source for Example",id:"source-for-example",children:[]}],p={rightToc:l},c="wrapper";function s(e){var n=e.components,t=o(e,["components"]);return Object(a.b)(c,r({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The code and artifacts for this example are on ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/facebook/redex/tree/master/examples/ProguardExample"}),"GitHub"),".")),Object(a.b)("p",null,"Currently there is limited support for specifying ProGuard rules which\nRedex will try to honor when it considers deleting (shrinking) classes,\nmethods and fields."),Object(a.b)("h2",{id:"the-need-to-control-shrinking"},"The Need To Control Shrinking"),Object(a.b)("p",null,"One of the optimizations that Redex performs is to remove interfaces that\nhave only one implementation. However, when there is a use of that interface\nthrough reflection or constructs like ",Object(a.b)("inlineCode",{parentName:"p"},"instanceof")," then this is an unsafe\nremoval which should be prohibited by using a ProGuard rule."),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("p",null,"Consider the following interface:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-java"}),"package com.facebook.redex.examples.proguardexample;\n\npublic interface Greek {\n    int doubleWombat();\n}\n")),Object(a.b)("p",null,"which only has one use:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-java"}),"package com.facebook.redex.examples.proguardexample;\n\npublic class Alpha implements Greek {\n\n    private int wombat;\n\n    public Alpha () {\n        wombat = 21;\n    }\n\n    public int doubleWombat() {\n        return 2 * wombat;\n    }\n}\n")),Object(a.b)("p",null,"and is instantiated in a main activity as follows:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-java"}),'package com.facebook.redex.examples.proguardexample;\n\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.widget.TextView;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        TextView textView = (TextView) findViewById(R.id.message);\n\n        Alpha alphaObject = new Alpha();\n        int ltuae = alphaObject.doubleWombat();\n        textView.setText("The answer is " + ltuae + "\\n");\n\n        try {\n            Class<?> greek = Class.forName("com.facebook.redex.examples.proguardexample.Greek");\n            if (greek.isInstance(alphaObject)) {\n                textView.append("Alpha is an instance of Greek");\n            } else {\n                textView.append("Alpha is not an instance of Greek");\n            }\n        } catch (ClassNotFoundException e) {\n            textView.append("ERROR: Greek interface not found");\n        }\n    }\n}\n')),Object(a.b)("p",null,"When you make a release build of this application and then process it with Redex you will get a crash\nbecause the ",Object(a.b)("inlineCode",{parentName:"p"},"Greek")," class will be removed because it only has a single implementation, but Redex\ndid not notice that ",Object(a.b)("inlineCode",{parentName:"p"},"Greek")," is used as part of an ",Object(a.b)("inlineCode",{parentName:"p"},"instanceof")," check (or there could have been some\nuse of reflection that mentioned the Greek class). Running the app gives the following output\non the display of the device:"),Object(a.b)("p",null,Object(a.b)("img",r({parentName:"p"},{src:"/img/missing-greek.png",alt:"Missing Greek interface"}))),Object(a.b)("p",null,"You can instruct Redex to prevent a class or interface from begin deleted by providing\na ",Object(a.b)("a",r({parentName:"p"},{href:"http://proguard.sourceforge.net/manual/usage.html#keepoptions"}),"ProGuard")," rule. In this\ncase we want to ensure the ",Object(a.b)("inlineCode",{parentName:"p"},"Greek")," interface is not deleted:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"-keep interface com.facebook.redex.examples.proguardexample.Greek\n")),Object(a.b)("p",null,"When you run Redex you can specify a single ProGuard file containing simple keep rules for classes\nand interfaces. For example:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-sh"}),"$ redex -o myfasterapp.apk myapp.apk -P proguard-rules.pro --sign -s ~/.android/debug.keystore -p android\n")),Object(a.b)("p",null,"Now when you run the post-Redex APK you will notice that the ",Object(a.b)("inlineCode",{parentName:"p"},"Greek")," class has not been stripped away:"),Object(a.b)("p",null,Object(a.b)("img",r({parentName:"p"},{src:"/img/with-greek.png",alt:"With Greek interface"}))),Object(a.b)("h2",{id:"limitations"},"Limitations"),Object(a.b)("p",null,"Right now we support only simple keep annotations for classes and interfaces. Shortly we will provide\nsupport a richer subset of the ProGuard configuration language."),Object(a.b)("h2",{id:"source-for-example"},"Source for Example"),Object(a.b)("p",null,"The source code for this example can be found in this directory."))}s.isMDXComponent=!0},64:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return u}));var a=t(0),r=t.n(a),o=r.a.createContext({}),i=function(e){var n=r.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},l=function(e){var n=i(e.components);return r.a.createElement(o.Provider,{value:n},e.children)};var p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},s=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),s=i(t),u=a,d=s[l+"."+u]||s[u]||c[u]||o;return t?r.a.createElement(d,Object.assign({},{ref:n},p,{components:t})):r.a.createElement(d,Object.assign({},{ref:n},p))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);